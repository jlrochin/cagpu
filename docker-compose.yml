services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: cagpu_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: cagpu_db
      POSTGRES_USER: cagpu_user
      POSTGRES_PASSWORD: cagpu_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - cagpu_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cagpu_user -d cagpu_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Aplicaci√≥n Next.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cagpu_app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://cagpu_user:cagpu_password@postgres:5432/cagpu_db
      - NEXTAUTH_SECRET=your-secret-key-here
      - NEXTAUTH_URL=http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cagpu_network
    volumes:
      - ./uploads:/app/uploads

  # pgAdmin (opcional, para administrar la base de datos)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cagpu_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@cagpu.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - cagpu_network

volumes:
  postgres_data:
    driver: local

networks:
  cagpu_network:
    driver: bridge 