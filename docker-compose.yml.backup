# ============================================================================
# DOCKER COMPOSE PARA CAGPU
# ============================================================================

version: "3.8"

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: cagpu_postgres
    environment:
      POSTGRES_DB: cagpu_production
      POSTGRES_USER: cagpu_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - .:/app
      - .:/app
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - cagpu_network
    restart: unless-stopped

  # Aplicación CAGPU
  app:
    build: .
    container_name: cagpu_app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - .:/app
      - .:/app
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - cagpu_network
    restart: unless-stopped

  # Nginx (opcional, para producción)
  nginx:
    image: nginx:alpine
    container_name: cagpu_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/app
      - .:/app
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./uploads:/var/www/uploads
    depends_on:
      - app
    networks:
      - cagpu_network
    restart: unless-stopped

  # Prisma Studio (opcional, para desarrollo)
  prisma-studio:
    image: node:18-alpine
    container_name: cagpu_prisma_studio
    working_dir: /app
    command: >
      sh -c "npm install -g prisma &&
              npx prisma studio --hostname 0.0.0.0 --port 5555"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - .:/app
      - .:/app
      - .:/app
    ports:
      - "5555:5555"
    depends_on:
      - postgres
    networks:
      - cagpu_network
    profiles:
      - dev

volumes:
      - .:/app
      - .:/app
  postgres_data:
    driver: local

networks:
  cagpu_network:
    driver: bridge
