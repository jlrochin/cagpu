const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkOrderExplicitly() {
  try {
    console.log('üîç VERIFICANDO EXPL√çCITAMENTE EL ORDEN DE LAS DIRECCIONES\n');
    
    // Obtener todas las direcciones ordenadas por displayOrder
    const orderedDirections = await prisma.direction.findMany({
      orderBy: { displayOrder: 'asc' },
      select: {
        id: true,
        name: true,
        displayOrder: true,
        servicesCount: true
      }
    });
    
    console.log('üìã DIRECCIONES ORDENADAS POR displayOrder:');
    console.log('=' .repeat(80));
    
    orderedDirections.forEach((direction, index) => {
      console.log(`${index + 1}. [Orden ${direction.displayOrder}] ${direction.name} (${direction.servicesCount} servicios)`);
    });
    
    // Verificar que el orden es secuencial
    const orders = orderedDirections.map(d => d.displayOrder);
    const isSequential = orders.every((order, index) => order === index + 1);
    
    console.log('\nüîç VERIFICACI√ìN DEL ORDEN:');
    console.log('=' .repeat(80));
    console.log(`   Valores de displayOrder: [${orders.join(', ')}]`);
    console.log(`   ¬øEs secuencial? ${isSequential ? '‚úÖ S√ç' : '‚ùå NO'}`);
    
    if (!isSequential) {
      console.log('\n‚ö†Ô∏è PROBLEMA DETECTADO:');
      console.log('   Los valores de displayOrder no son secuenciales.');
      console.log('   Esto puede causar que el frontend no muestre el orden correcto.');
    }
    
    // Verificar tambi√©n sin ordenar
    const unorderedDirections = await prisma.direction.findMany({
      select: {
        id: true,
        name: true,
        displayOrder: true,
        servicesCount: true
      }
    });
    
    console.log('\nüìã DIRECCIONES SIN ORDENAR (orden natural de la base de datos):');
    console.log('=' .repeat(80));
    
    unorderedDirections.forEach((direction, index) => {
      console.log(`${index + 1}. [Orden ${direction.displayOrder}] ${direction.name} (${direction.servicesCount} servicios)`);
    });
    
    console.log('\nüí° INFORMACI√ìN IMPORTANTE:');
    console.log('   - Si el frontend no est√° usando displayOrder, ver√°s el orden natural de la base de datos');
    console.log('   - Si el frontend S√ç est√° usando displayOrder, ver√°s el orden que configuramos');
    console.log('   - El problema puede estar en el c√≥digo del frontend que no consulta displayOrder');
    
  } catch (error) {
    console.error('‚ùå Error durante la verificaci√≥n:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Ejecutar la verificaci√≥n
checkOrderExplicitly();
