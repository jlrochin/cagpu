const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function insertDirectionEnfermeria() {
    try {
        console.log('üîÑ Insertando Direcci√≥n de Enfermer√≠a...\n');

        // Crear la direcci√≥n
        const direction = await prisma.direction.upsert({
            where: { id: 'DIRECCION_ENFERMERIA' },
            update: {},
            create: {
                id: 'DIRECCION_ENFERMERIA',
                name: 'Direcci√≥n de Enfermer√≠a',
                description: 'Direcci√≥n de Enfermer√≠a del sistema',
                servicesCount: 0
            }
        });

        console.log('‚úÖ Direcci√≥n de Enfermer√≠a creada/actualizada');

        // Lista de servicios de la Direcci√≥n de Enfermer√≠a
        const servicios = [
            {
                id: 'DIRECCION_ENFERMERIA_PRINCIPAL',
                name: 'Direcci√≥n de Enfermer√≠a',
                responsiblePerson: 'Mtra. Blanca Estela Cervantes Guzm√°n',
                location: 'Edificio B, Piso 1',
                serviceType: 'Direcci√≥n',
                description: 'Direcci√≥n principal de enfermer√≠a'
            },
            {
                id: 'SERVICIOS_ENFERMERIA',
                name: 'Servicios de Enfermer√≠a',
                responsiblePerson: 'Mtra. Leticia Arellano Alvarez (ENC)',
                location: 'Edificio B, Piso 1',
                serviceType: 'Servicio',
                description: 'Servicios de enfermer√≠a'
            },
            {
                id: 'ESCUELA_ENFERMERIA',
                name: 'Escuela de Enfermer√≠a',
                responsiblePerson: 'Mtra. Ma. Tolina Alc√°ntara Garc√≠a (ENC)',
                location: 'Ju√°rez del Centro',
                serviceType: 'Servicio',
                description: 'Escuela de enfermer√≠a'
            }
        ];

        console.log(`üîÑ Creando ${servicios.length} servicios...`);

        // Crear todos los servicios
        for (const servicio of servicios) {
            await prisma.service.create({
                data: {
                    id: servicio.id,
                    directionId: 'DIRECCION_ENFERMERIA',
                    name: servicio.name,
                    responsiblePerson: servicio.responsiblePerson,
                    phoneExtension: null,
                    serviceType: servicio.serviceType,
                    location: servicio.location,
                    description: servicio.description,
                    isActive: true
                }
            });
            console.log(`‚úÖ ${servicio.name} creado`);
        }

        // Actualizar el contador de servicios
        await prisma.direction.update({
            where: { id: 'DIRECCION_ENFERMERIA' },
            data: { servicesCount: servicios.length }
        });

        console.log('\nüéâ Direcci√≥n de Enfermer√≠a configurada exitosamente!');
        console.log(`üìä Resumen:`);
        console.log(`   - Direcci√≥n: ${direction.name}`);
        console.log(`   - Total de servicios: ${servicios.length}`);
        console.log(`   - Tipos: 1 Direcci√≥n, 2 Servicios`);

    } catch (error) {
        console.error('‚ùå Error durante la inserci√≥n:', error);
    } finally {
        await prisma.$disconnect();
    }
}

// Ejecutar la inserci√≥n
insertDirectionEnfermeria();
