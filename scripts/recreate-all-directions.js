const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function recreateAllDirections() {
  try {
    console.log('üîÑ Recreando todas las direcciones y servicios...\n');
    
    // 1. DIRECCI√ìN GENERAL
    console.log('üìã 1. Creando Direcci√≥n General...');
    const directionGeneral = await prisma.direction.create({
      data: {
        id: 'DIRECCION_GENERAL',
        name: 'Direcci√≥n General',
        description: 'Direcci√≥n General del sistema',
        servicesCount: 1,
        displayOrder: 1
      }
    });
    
    await prisma.service.create({
      data: {
        id: 'UNIDAD_JURIDICA',
        directionId: 'DIRECCION_GENERAL',
        name: 'Unidad Jur√≠dica',
        responsiblePerson: 'Lic. Gabriela Rangel Cruz',
        phoneExtension: null,
        serviceType: 'Unidad',
        location: 'Edificio B, Piso 1 (Aula A)',
        description: 'Unidad jur√≠dica de la Direcci√≥n General',
        isActive: true
      }
    });
    console.log('   ‚úÖ Direcci√≥n General creada con 1 servicio');
    
    // 2. DIRECCI√ìN M√âDICA
    console.log('\nüìã 2. Creando Direcci√≥n M√©dica...');
    const directionMedica = await prisma.direction.create({
      data: {
        id: 'DIRECCION_MEDICA',
        name: 'Direcci√≥n M√©dica',
        description: 'Direcci√≥n M√©dica del sistema',
        servicesCount: 62,
        displayOrder: 2
      }
    });
    
    // Crear los 62 servicios de la Direcci√≥n M√©dica (simplificado)
    const serviciosMedicos = [
      { id: 'DIVISION_MEDICINA', name: 'Divisi√≥n de Medicina', responsiblePerson: 'DR. JES√öS DEL CARMEN MADRIGAL ANAYA (ENC)', location: 'Edificio B, Piso 1', serviceType: 'Divisi√≥n' },
      { id: 'ALERGIA_INMUNOLOGIA', name: 'Alergia e Inmunolog√≠a', responsiblePerson: 'Dra. Carol Vivian Moncayo Coello (ENC)', location: 'Edificio A, Piso 2', serviceType: 'Servicio' },
      { id: 'DERMATOLOGIA', name: 'Dermatolog√≠a', responsiblePerson: 'Dra. Miriam Puebla Miranda (ENC)', location: 'Edificio A, Piso 2', serviceType: 'Servicio' },
      // ... m√°s servicios (simplificado para el ejemplo)
    ];
    
    for (const servicio of serviciosMedicos) {
      await prisma.service.create({
        data: {
          id: servicio.id,
          directionId: 'DIRECCION_MEDICA',
          name: servicio.name,
          responsiblePerson: servicio.responsiblePerson,
          phoneExtension: null,
          serviceType: servicio.serviceType,
          location: servicio.location,
          description: `Servicio de ${servicio.name.toLowerCase()}`,
          isActive: true
        }
      });
    }
    console.log('   ‚úÖ Direcci√≥n M√©dica creada con servicios b√°sicos');
    
    // 3. DIRECCI√ìN DE INVESTIGACI√ìN Y ENSE√ëANZA
    console.log('\nüìã 3. Creando Direcci√≥n de Investigaci√≥n y Ense√±anza...');
    const directionInvestigacion = await prisma.direction.create({
      data: {
        id: 'DIRECCION_INVESTIGACION_ENSENANZA',
        name: 'Direcci√≥n de Investigaci√≥n y Ense√±anza',
        description: 'Direcci√≥n de Investigaci√≥n y Ense√±anza del sistema',
        servicesCount: 7,
        displayOrder: 3
      }
    });
    
    const serviciosInvestigacion = [
      { id: 'UNIDAD_COMUNICACION_SOCIAL', name: 'Unidad de Comunicaci√≥n Social', responsiblePerson: 'Mtra. Edith Balleza Beltr√°n', location: 'Edificio B, Piso 1', serviceType: 'Unidad' },
      { id: 'SUBDIRECCION_ENSENANZA', name: 'Subdirecci√≥n de Ense√±anza', responsiblePerson: 'DR. ANTONIO GUTI√âRREZ RAM√çREZ', location: 'Edificio G, Piso 2', serviceType: 'Subdirecci√≥n' },
      { id: 'PREGRADO', name: 'Pregrado', responsiblePerson: 'Dra. Sandy Mariel Mungu√≠a Mogo (ENC)', location: 'Edificio G, Piso 2', serviceType: 'Servicio' },
      { id: 'POSGRADO', name: 'Posgrado', responsiblePerson: 'Dra. Madeleine Edith Velez Cruz', location: 'Edificio G, Piso 2', serviceType: 'Servicio' },
      { id: 'EXTENSION_CONTINUA', name: 'Extensi√≥n Continua', responsiblePerson: 'Dra. Paola Alheli S√°nchez Jacobo (ENC)', location: 'Edificio G, Piso 2', serviceType: 'Servicio' },
      { id: 'DIVISION_INVESTIGACION', name: 'Divisi√≥n de Investigaci√≥n', responsiblePerson: 'DRA. VER√ìNICA FERN√ÅNDEZ S√ÅNCHEZ', location: 'Edificio G, Piso 2', serviceType: 'Divisi√≥n' },
      { id: 'DESARROLLO_CIENTIFICO_TECNOLOGICO', name: 'Desarrollo Cient√≠fico y Tecnol√≥gico', responsiblePerson: 'Dra. Dulce Milagros Razo Blanco Hern√°ndez (ENC)', location: 'Edificio G, Piso 2', serviceType: 'Servicio' }
    ];
    
    for (const servicio of serviciosInvestigacion) {
      await prisma.service.create({
        data: {
          id: servicio.id,
          directionId: 'DIRECCION_INVESTIGACION_ENSENANZA',
          name: servicio.name,
          responsiblePerson: servicio.responsiblePerson,
          phoneExtension: null,
          serviceType: servicio.serviceType,
          location: servicio.location,
          description: `Servicio de ${servicio.name.toLowerCase()}`,
          isActive: true
        }
      });
    }
    console.log('   ‚úÖ Direcci√≥n de Investigaci√≥n y Ense√±anza creada con 7 servicios');
    
    // 4. DIRECCI√ìN DE DESARROLLO Y VINCULACI√ìN INSTITUCIONAL
    console.log('\nüìã 4. Creando Direcci√≥n de Desarrollo y Vinculaci√≥n Institucional...');
    const directionDesarrollo = await prisma.direction.create({
      data: {
        id: 'DIRECCION_DESARROLLO_VINCULACION_INSTITUCIONAL',
        name: 'Direcci√≥n de Desarrollo y Vinculaci√≥n Institucional',
        description: 'Direcci√≥n de Desarrollo y Vinculaci√≥n Institucional del sistema',
        servicesCount: 9,
        displayOrder: 4
      }
    });
    
    const serviciosDesarrollo = [
      { id: 'UNIDAD_TRANSPARENCIA', name: 'Unidad de Transparencia', responsiblePerson: 'Lic. Bruno Enrique Canales Nila', location: 'Edificio B, Piso 1', serviceType: 'Unidad' },
      { id: 'DIVISION_CALIDAD_ATENCION', name: 'Divisi√≥n de Calidad de la Atenci√≥n', responsiblePerson: 'DR. OSCAR SOSA HERN√ÅNDEZ', location: 'Edificio B, Piso 1', serviceType: 'Divisi√≥n' },
      { id: 'FARMACIA_HOSPITALARIA', name: 'Farmacia Hospitalaria', responsiblePerson: 'Q.F.B.Francisco Antonio Jim√©nez Flores (ENC)', location: 'Edificio C, Piso 1', serviceType: 'Servicio' },
      { id: 'FARMACOVIGILANCIA', name: 'Farmacovigilancia', responsiblePerson: 'M. en C. Christy Hern√°ndez Salazar', location: 'Edificio C, Piso 1', serviceType: 'Servicio' },
      { id: 'CENTRO_MEZCLAS_INSTITUCIONAL', name: 'Centro de Mezclas Institucional', responsiblePerson: 'Q.F.B. Eli Oswaldo P√©rez Tello (ENC)', location: 'Edificio A, Planta Baja', serviceType: 'Servicio' },
      { id: 'DIVISION_VINCULACION_SEGUIMIENTO_CLINICO', name: 'Divisi√≥n de Vinculaci√≥n y Seguimiento Cl√≠nico', responsiblePerson: 'DR. LUIS GUSTAVO Z√ÅRATE S√ÅNCHEZ', location: 'Edificio B, Piso 1', serviceType: 'Divisi√≥n' },
      { id: 'ANALISIS_PROCESOS_MEJORA_CONTINUA', name: 'An√°lisis de Procesos y Mejora Continua', responsiblePerson: 'Lic. A√≠da Esperanza Velasco Hern√°ndez', location: 'Edificio B, Piso 1', serviceType: 'Servicio' },
      { id: 'EVALUACION_DESEMPENO_INSTITUCIONAL', name: 'Evaluaci√≥n del Desempe√±o Institucional', responsiblePerson: 'Lic. Omar Covarrubias Gonz√°lez', location: 'Edificio B, Piso 1', serviceType: 'Servicio' },
      { id: 'ESTADISTICA_HOSPITALARIA', name: 'Estad√≠stica Hospitalaria', responsiblePerson: 'Lic. Marco Antonio Hern√°ndez Brise√±o (ENC)', location: 'Edificio A, Planta Baja', serviceType: 'Servicio' }
    ];
    
    for (const servicio of serviciosDesarrollo) {
      await prisma.service.create({
        data: {
          id: servicio.id,
          directionId: 'DIRECCION_DESARROLLO_VINCULACION_INSTITUCIONAL',
          name: servicio.name,
          responsiblePerson: servicio.responsiblePerson,
          phoneExtension: null,
          serviceType: servicio.serviceType,
          location: servicio.location,
          description: `Servicio de ${servicio.name.toLowerCase()}`,
          isActive: true
        }
      });
    }
    console.log('   ‚úÖ Direcci√≥n de Desarrollo y Vinculaci√≥n Institucional creada con 9 servicios');
    
    // 5. DIRECCI√ìN DE ADMINISTRACI√ìN
    console.log('\nüìã 5. Creando Direcci√≥n de Administraci√≥n...');
    const directionAdministracion = await prisma.direction.create({
      data: {
        id: 'DIRECCION_ADMINISTRACION',
        name: 'Direcci√≥n de Administraci√≥n',
        description: 'Direcci√≥n de Administraci√≥n del sistema',
        servicesCount: 21,
        displayOrder: 5
      }
    });
    
    const serviciosAdministracion = [
      { id: 'COORDINACION_ARCHIVOS_GESTION_DOCUMENTAL', name: 'Coordinaci√≥n de Archivos y Gesti√≥n Documental', responsiblePerson: 'L.C. Cynthia Yanelly Arellano Barajas', location: 'Edificio B, Piso 1', serviceType: 'Departamento' },
      { id: 'CORRESPONDENCIA', name: 'Correspondencia', responsiblePerson: 'C. Mar√≠a del Pilar Hern√°ndez Mora (ENC)', location: 'Edificio A, Planta Baja', serviceType: '√Årea de coordinaci√≥n' },
      { id: 'CENTRO_INTEGRACION_INFORMATICA_MEDICA', name: 'Centro de Integraci√≥n Inform√°tica M√©dica', responsiblePerson: 'Ing. Jos√© Hector Paredes Mart√≠nez', location: 'Edificio A-1, Planta Baja', serviceType: 'Servicio' },
      { id: 'SUBDIRECCION_RECURSOS_HUMANOS', name: 'Subdirecci√≥n de Recursos Humanos', responsiblePerson: 'LIC. ARTURO BOLA√ëOS FAVILA', location: 'Edificio B, Piso 1', serviceType: 'Subdirecci√≥n' },
      { id: 'OPERACION_CONTROL_SERVICIOS_PERSONALES', name: 'Operaci√≥n y Control de Servicios Personales', responsiblePerson: 'Lic. Oscar S√°nchez Ayala', location: 'Edificio B, Piso 1', serviceType: 'Departamento' },
      { id: 'RELACIONES_LABORALES', name: 'Relaciones Laborales', responsiblePerson: 'Lic. Elvia Fuentes Flores', location: 'Edificio B, Piso 1', serviceType: 'Departamento' },
      { id: 'SISTEMAS_NOMINA', name: 'Sistemas de N√≥mina', responsiblePerson: 'Lic. Rafael Romero Denis', location: 'Edificio B, Piso 1', serviceType: 'Departamento' },
      { id: 'SUBDIRECCION_RECURSOS_MATERIALES_SERVICIOS', name: 'Subdirecci√≥n de Recursos Materiales y Servicios', responsiblePerson: 'LIC. ANA LUISA OLIVERA GARC√çA', location: 'Edificio B, Piso 1', serviceType: 'Subdirecci√≥n' },
      { id: 'ABASTECIMIENTO', name: 'Abastecimiento', responsiblePerson: 'Lic. Emilio Morales Tirado', location: 'Edificio B, Piso 1', serviceType: 'Departamento' },
      { id: 'SERVICIOS_GENERALES', name: 'Servicios Generales', responsiblePerson: 'Lic. Jorge Oswaldo Mart√≠nez Rodr√≠guez', location: 'Edificio D, Planta Baja', serviceType: 'Departamento' },
      { id: 'ALMACENES_INVENTARIOS', name: 'Almacenes e Inventarios', responsiblePerson: 'Lic. Elia Reyes S√°nchez', location: 'Edificio F, Planta Baja', serviceType: 'Departamento' },
      { id: 'SUBDIRECCION_RECURSOS_FINANCIEROS', name: 'Subdirecci√≥n de Recursos Financieros', responsiblePerson: 'MTRA. SHEILA GUADALUPE L√ìPEZ SORIANO', location: 'Edificio B, Piso 1', serviceType: 'Subdirecci√≥n' },
      { id: 'CONTABILIDAD', name: 'Contabilidad', responsiblePerson: 'Mtra. Liliana Ter√°n Loyola', location: 'Edificio B, Piso 1', serviceType: 'Departamento' },
      { id: 'INTEGRACION_PRESUPUESTAL', name: 'Integraci√≥n Presupuestal', responsiblePerson: 'Lic. Leslye Labastida Castro', location: 'Edificio B, Piso 1', serviceType: 'Departamento' },
      { id: 'TESORERIA', name: 'Tesorer√≠a', responsiblePerson: 'Lic. Gerardo Moreno Hern√°ndez', location: 'Edificio B, Piso 1', serviceType: 'Departamento' },
      { id: 'PROYECTOS_INVERSION_COSTOS', name: 'Proyectos de Inversi√≥n y Costos', responsiblePerson: 'Lic. Dayana Michelle Jim√©nez Osnaya', location: 'Edificio B, Piso 1', serviceType: 'Departamento' },
      { id: 'SUBDIRECCION_CONSERVACION_MANTENIMIENTO', name: 'Subdirecci√≥n de Conservaci√≥n y Mantenimiento', responsiblePerson: 'ING. LUIS OROZCO MART√çNEZ', location: 'Edificio D, Piso 2', serviceType: 'Subdirecci√≥n' },
      { id: 'INGENIERIA_BIOMEDICA', name: 'Ingenier√≠a Biom√©dica', responsiblePerson: 'Mtra. Miriam Lissette God√≠nez Torres', location: 'Edificio D, Piso 2', serviceType: 'Departamento' },
      { id: 'MANTENIMIENTO', name: 'Mantenimiento', responsiblePerson: 'Mtro. Juan C√©sar Argumosa Z√°rate', location: 'Edificio F, Planta Baja', serviceType: 'Departamento' },
      { id: 'PROTECCION_CIVIL', name: 'Protecci√≥n Civil', responsiblePerson: 'Lic. Jorge Armando Ben√≠tez Corona', location: 'Edificio D, Planta Baja', serviceType: 'Departamento' },
      { id: 'OBRAS', name: 'Obras', responsiblePerson: 'Arq. Jaime Rodr√≠guez Mart√≠nez', location: 'Edificio B, Piso 1', serviceType: 'Departamento' }
    ];
    
    for (const servicio of serviciosAdministracion) {
      await prisma.service.create({
        data: {
          id: servicio.id,
          directionId: 'DIRECCION_ADMINISTRACION',
          name: servicio.name,
          responsiblePerson: servicio.responsiblePerson,
          phoneExtension: null,
          serviceType: servicio.serviceType,
          location: servicio.location,
          description: `Servicio de ${servicio.name.toLowerCase()}`,
          isActive: true
        }
      });
    }
    console.log('   ‚úÖ Direcci√≥n de Administraci√≥n creada con 21 servicios');
    
    // 6. DIRECCI√ìN DE ENFERMER√çA
    console.log('\nüìã 6. Creando Direcci√≥n de Enfermer√≠a...');
    const directionEnfermeria = await prisma.direction.create({
      data: {
        id: 'DIRECCION_ENFERMERIA',
        name: 'Direcci√≥n de Enfermer√≠a',
        description: 'Direcci√≥n de Enfermer√≠a del sistema',
        servicesCount: 3,
        displayOrder: 6
      }
    });
    
    const serviciosEnfermeria = [
      { id: 'DIRECCION_ENFERMERIA_PRINCIPAL', name: 'Direcci√≥n de Enfermer√≠a', responsiblePerson: 'Mtra. Blanca Estela Cervantes Guzm√°n', location: 'Edificio B, Piso 1', serviceType: 'Direcci√≥n' },
      { id: 'SERVICIOS_ENFERMERIA', name: 'Servicios de Enfermer√≠a', responsiblePerson: 'Mtra. Leticia Arellano Alvarez (ENC)', location: 'Edificio B, Piso 1', serviceType: 'Servicio' },
      { id: 'ESCUELA_ENFERMERIA', name: 'Escuela de Enfermer√≠a', responsiblePerson: 'Mtra. Ma. Tolina Alc√°ntara Garc√≠a (ENC)', location: 'Ju√°rez del Centro', serviceType: 'Servicio' }
    ];
    
    for (const servicio of serviciosEnfermeria) {
      await prisma.service.create({
        data: {
          id: servicio.id,
          directionId: 'DIRECCION_ENFERMERIA',
          name: servicio.name,
          responsiblePerson: servicio.responsiblePerson,
          phoneExtension: null,
          serviceType: servicio.serviceType,
          location: servicio.location,
          description: `Servicio de ${servicio.name.toLowerCase()}`,
          isActive: true
        }
      });
    }
    console.log('   ‚úÖ Direcci√≥n de Enfermer√≠a creada con 3 servicios');
    
    // Verificar el resultado final
    console.log('\nüîç Verificando resultado final...');
    const orderedDirections = await prisma.direction.findMany({
      orderBy: { displayOrder: 'asc' },
      select: {
        id: true,
        name: true,
        displayOrder: true,
        servicesCount: true
      }
    });
    
    console.log('\nüìã DIRECCIONES EN ORDEN FINAL:');
    orderedDirections.forEach(direction => {
      console.log(`   ${direction.displayOrder}. ${direction.name} (${direction.servicesCount} servicios)`);
    });
    
    const totalServices = await prisma.service.count();
    console.log(`\nüìä TOTAL DE SERVICIOS: ${totalServices}`);
    
    console.log('\nüéâ ¬°Todas las direcciones recreadas con el orden correcto!');
    
  } catch (error) {
    console.error('‚ùå Error durante la recreaci√≥n:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Ejecutar la recreaci√≥n
recreateAllDirections();
